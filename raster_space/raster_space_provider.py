# -*- coding: utf-8 -*-

"""
/***************************************************************************
 RasterSpace
                                 A QGIS plugin
 Estimation of the local space size using raster algebra
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2019-07-26
        copyright            : (C) 2019 by Timofey Samsonov, Lomonosov MSU Faculty of Geography
        email                : tsamsonov@geogr.msu.ru
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Timofey Samsonov, Lomonosov MSU Faculty of Geography'
__date__ = '2019-07-26'
__copyright__ = '(C) 2019 by Timofey Samsonov, Lomonosov MSU Faculty of Geography'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

from qgis.core import QgsProcessingProvider
from .raster_space_algorithm import SpaceWidthAlgorithmVector
from .raster_space_algorithm import SpaceWidthAlgorithmRaster
from .raster_space_algorithm import SpaceWidthAlgorithmUrban
from .raster_space_algorithm import DEMGranularityAlgorithm
from .raster_space_algorithm import CurvatureFilteringAlgorithm


class RasterSpaceProvider(QgsProcessingProvider):

    def loadAlgorithms(self, *args, **kwargs):
        """
        Loads all algorithms belonging to this provider.
        """
        self.addAlgorithm(SpaceWidthAlgorithmVector())
        self.addAlgorithm(SpaceWidthAlgorithmRaster())
        self.addAlgorithm(SpaceWidthAlgorithmUrban())
        self.addAlgorithm(DEMGranularityAlgorithm())
        self.addAlgorithm(CurvatureFilteringAlgorithm())

    def id(self):
        """
        Returns the unique provider id, used for identifying the provider. This
        string should be a unique, short, character only string, eg "qgis" or
        "gdal". This string should not be localised.
        """
        return 'rasterspace'

    def name(self):
        """
        Returns the provider name, which is used to describe the provider
        within the GUI.

        This string should be short (e.g. "Lastools") and localised.
        """
        return self.tr('Raster Space')

    def icon(self):
        """
        Should return a QIcon which is used for your provider inside
        the Processing toolbox.
        """
        return QgsProcessingProvider.icon(self)
